#!/usr/bin/env python

'''
This script builds GIS layers from TSV geocoded tweets. Given such a TSV file,
foo.geo.tsv, it emits:

   1. a GeoJSON file containing each tweet as a point (foo.geojson).
   2. a GeoTIFF with a heat map with tweet counts in each pixel (foo.tiff).'''

import argparse

import testable
import u
l = u.l

ap = argparse.ArgumentParser(description=__doc__,
                             formatter_class=argparse.RawTextHelpFormatter)
ap.add_argument('--tiff-width',
                metavar='N',
                type=int,
                help='make GeoTIFF file this many pixels wide (height is auto)')
ap.add_argument('--unittest',
                nargs=0,
                action=testable.Raise_Unittest_Exception,
                help='run unit tests instead of real stuff')
ap.add_argument('--verbose',
               action='store_true',
               help='be more verbose with log output')
ap.add_argument('input',
                metavar='FILE',
                help='TSV file containing geocoded tweets')
                
                
### Main ###

def main():
   l.info('starting')
   l.info('done')

                
### Bootstrap ###

try:
   args = u.parse_args(ap)
   u.logging_init('goviz')
   
   if (__name__ == '__main__'):
        main()
except testable.Unittests_Only_Exception:
    testable.register('')